# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nTkgGYg7iFhvJoGlVCDByN-UeZCQjjvl
"""

# üß∞ Install required libraries


# üìö Import them
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import joblib

# üè° Generate a fake but realistic housing dataset
data = {
    'area': np.random.randint(500, 5000, 200),
    'bedrooms': np.random.randint(1, 6, 200),
    'bathrooms': np.random.randint(1, 4, 200),
    'stories': np.random.randint(1, 4, 200),
    'parking': np.random.randint(0, 3, 200),
    'location_score': np.random.randint(1, 10, 200)
}

df = pd.DataFrame(data)
df['price'] = (
    df['area'] * 1200 +
    df['bedrooms'] * 100000 +
    df['bathrooms'] * 50000 +
    df['stories'] * 30000 +
    df['parking'] * 40000 +
    df['location_score'] * 20000 +
    np.random.randint(-50000, 50000, 200)
)

df.head()

df.info()
df.describe()
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.show()

X = df.drop('price', axis=1)
y = df['price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
print("Training Samples:", X_train.shape)
print("Testing Samples:", X_test.shape)

model = LinearRegression()
model.fit(X_train, y_train)

print("Model trained successfully ‚úÖ")

y_pred = model.predict(X_test)

mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Absolute Error:", mae)
print("Mean Squared Error:", mse)
print("R¬≤ Score:", r2)

plt.figure(figsize=(7,5))
plt.scatter(y_test, y_pred, color='purple')
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted House Prices")
plt.grid(True)
plt.show()

joblib.dump(model, 'house_price_model.pkl')
print("‚úÖ Model saved as 'house_price_model.pkl'")

# To reload later:
loaded_model = joblib.load('house_price_model.pkl')

# Example: [area, bedrooms, bathrooms, stories, parking, location_score]
sample_house = np.array([[2000, 3, 2, 2, 1, 8]])
predicted_price = loaded_model.predict(sample_house)
print(f"Predicted Price for given house: ‚Çπ{predicted_price[0]:,.2f}")
